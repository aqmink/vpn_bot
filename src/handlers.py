import asyncio

from aiogram import Dispatcher, F
from aiogram.filters import CommandStart
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    URLInputFile,
    CallbackQuery,
    WebAppInfo,
)
from aiogram.utils.formatting import Text, Pre

from client import APIClient
from script import get_url, get_channels

dp = Dispatcher()

client = APIClient()


@dp.message(CommandStart())
async def hello(message: Message):
    # image = URLInputFile(
    #     url="https://exa-pizza.ru/files/products/pomidor.1800x1200.png",
    #     filename="python-logo.png"
    # )
    await message.answer(
        text="üÜìFREE INTERNETüÜì\n\n–í—ã –ø–æ–ø–∞–ª–∏ –≤ VPN, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É—Å–ª—É–≥–∏ –ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –∑–∞ –ë–ï–°–ü–õ–ê–¢–ù–û.\n\n–ù–û –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ:\n\nüîµ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª—ã. –ò —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\nüî• –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç—Ä–∞—Ñ–∏–∫—É, —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.\n\nüîê –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –¥–∞—Å—Ç –Ω–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –≤ –º–∏—Ä–µ.\n\nüöÄ –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!\n\nü§ó–ù–ò–ñ–ï, –¢–ï–õ–ï–ì–†–ê–ú–ú –ö–ê–ù–ê–õ–´ –ù–ê –ö–û–¢–û–†–´–ï –ù–£–ñ–ù–û –ü–û–î–ü–ò–°–ê–¢–¨–°–Ø:\n\n üëâ @freeimternet",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üë•Ô∏è –û —Å–µ—Ä–≤–∏—Å–µ",
                        callback_data="about1"
                    ),
                    InlineKeyboardButton(
                        text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                        callback_data="check"
                    ),
                ],
            ],
        )
    )
    while True:
        user_id = message.from_user.id
        await asyncio.sleep(12 * 3600)
        flag = True
        for channel in get_channels(r"C:\Users\89052\projects\vpn_bot\src\channels_list.txt"):
            if (await message.bot.get_chat_member(channel, user_id)).status not in ["member", "creator", "administrator"]:
                flag = False
        if not flag: #–ò–∑–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–¥–µ!!!
            await client.update_client(user_id, False)
            await message.answer(
                text="–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏",
                reply_markup=InlineKeyboardMarkup(
                    inline_keyboard=[
                        [
                            InlineKeyboardButton(
                                text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                                callback_data="check",
                            ),
                        ]   
                    ],
                )
            )


@dp.callback_query(F.data == "check")
async def check(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    flag = True
    for channel in get_channels(r"C:\Users\89052\projects\vpn_bot\src\channels_list.txt"):
        if (await callback_query.bot.get_chat_member(channel, user_id)).status not in ["member", "creator", "administrator"]:
            flag = False
    if flag: #–ò–∑–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–¥–µ!!!
        response_data = await client.set_client(user_id)
        if response_data["success"] == True:
            await callback_query.bot.send_message(chat_id=-4971478443, text="—É—Ä–∞, –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        await client.update_client(user_id, True)
        await callback_query.message.edit_text(
            text="üèÅ–í—Å—ë! –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –î–û–°–¢–£–ü –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É.\n\nüòé–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –≤–∏–¥–µ–æ –∏ —Ñ–∏–ª—å–º–æ–≤.\n\n‚¨áÔ∏è–ù–∏–∂–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ:‚¨áÔ∏è\n\nüßë‚Äçüè´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.\n\nüõü–°—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂—É, –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.\n",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥",
                            callback_data="back"
                        ),
                        InlineKeyboardButton(
                            text="üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                            web_app=WebAppInfo(url="https://telegra.ph/Instrukciya-po-ustanovke-VPN-na-vse-tipy-ustrojstv-08-28")
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="üõ° –ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è",
                            callback_data="access"
                        ),
                        InlineKeyboardButton(
                            text="üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                            callback_data="support"
                        ),
                    ],
                ]
            )
        )
    else:
        if await client.get_client_by_email(f"freenet-vpn-{user_id}"):
            await client.update_client(user_id, False)
        await callback_query.message.edit_text(
            text=f"–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                            callback_data="check1"
                        ),
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥",
                            callback_data="back"
                        ),
                    ]
                ]
            )
        )


@dp.callback_query(F.data == "check1")
async def check(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    flag = True
    for channel in get_channels(r"C:\Users\89052\projects\vpn_bot\src\channels_list.txt"):
        if (await callback_query.bot.get_chat_member(channel, user_id)).status not in ["member", "creator", "administrator"]:
            flag = False
    if flag: #–ò–∑–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–¥–µ!!!
        response_data = await client.set_client(user_id)
        if response_data["success"] == True:
            await callback_query.bot.send_message(chat_id=-4971478443, text="—É—Ä–∞, –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        await client.update_client(user_id, True)
        await callback_query.message.edit_text(
            text="üèÅ–í—Å—ë! –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –î–û–°–¢–£–ü –∫ –Ω–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É.\n\nüòé–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö –≤–∏–¥–µ–æ –∏ —Ñ–∏–ª—å–º–æ–≤.\n\n‚¨áÔ∏è–ù–∏–∂–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ:‚¨áÔ∏è\n\nüßë‚Äçüè´–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é.\n\nüõü–°—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂—É, –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.\n",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥",
                            callback_data="back"
                        ),
                        InlineKeyboardButton(
                            text="üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                            web_app=WebAppInfo(url="https://telegra.ph/Instrukciya-po-ustanovke-VPN-na-vse-tipy-ustrojstv-08-28")
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="üõ° –ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è",
                            callback_data="access"
                        ),
                        InlineKeyboardButton(
                            text="üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                            callback_data="support"
                        ),
                    ],
                ]
            )
        )
    else:
        if await client.get_client_by_email(f"freenet-vpn-{user_id}"):
            await client.update_client(user_id, False)
        await callback_query.message.edit_text(
            text=f"–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                            callback_data="check"
                        ),
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥",
                            callback_data="back"
                        ),
                    ]
                ]
            )
        )


@dp.callback_query(F.data == "access")
async def access(callback_query: CallbackQuery):
    user_id = callback_query.from_user.id
    user = await client.get_client_by_email(f"freenet-vpn-{user_id}")
    if user and user["\"enable\""] != "false,":
        await callback_query.message.edit_text(
            **Text(
                f"‚úÖ –í–∞—à FREE INTERNET –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üéâ\n\n–í–∞—à ID: {user_id}\n\n–ö–ª—é—á –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è üëá\n", 
                Pre(
                    f"{get_url(user_id, user['pbk'], user['sid'])}", 
                    language="copy")
                ).as_kwargs(),
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="üîô –ù–∞–∑–∞–¥",
                            callback_data="back"
                        ),
                        InlineKeyboardButton(
                            text="üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                            web_app=WebAppInfo(url="https://telegra.ph/Instrukciya-po-ustanovke-VPN-na-vse-tipy-ustrojstv-08-28")
                        ),
                    ]
                ]
            )
        )
    else:
        await callback_query.message.edit_text(
            text="–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –≤—Å–µ —Ç–≥–∫",
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                            callback_data="check"
                        ),
                        InlineKeyboardButton(
                            text="üîô–ù–∞–∑–∞–¥",
                            callback_data="back1"
                        ),
                    ],
                ]
            )
        )


@dp.callback_query(F.data == "support")
async def access(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="üÜò –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?\n\n‚ùì –ß—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è?\n‚ùì –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è?\n‚ùì –ö–∞–∫ –≤—Å–µ —É—Å—Ç—Ä–æ–µ–Ω–æ?\n\n–ú–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∏–ª–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n@saveserf_support_bot",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥", callback_data="back"
                )
            ]]
        )
    )


@dp.callback_query(F.data == "about")
async def access(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="–π–æ, –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥", callback_data="back1"
                )
            ]]
        )
    )


@dp.callback_query(F.data == "about1")
async def access(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="–π–æ, –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[[
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥", callback_data="back"
                )
            ]]
        )
    )


@dp.callback_query(F.data == "back")
async def hello(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="üÜìFREE INTERNETüÜì\n\n–í—ã –ø–æ–ø–∞–ª–∏ –≤ VPN, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É—Å–ª—É–≥–∏ –ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –∑–∞ –ë–ï–°–ü–õ–ê–¢–ù–û.\n\n–ù–û –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ:\n\nüîµ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª—ã. –ò —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\nüî• –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç—Ä–∞—Ñ–∏–∫—É, —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.\n\nüîê –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –¥–∞—Å—Ç –Ω–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –≤ –º–∏—Ä–µ.\n\nüöÄ –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!\n\nü§ó–ù–ò–ñ–ï, –¢–ï–õ–ï–ì–†–ê–ú–ú –ö–ê–ù–ê–õ–´ –ù–ê –ö–û–¢–û–†–´–ï –ù–£–ñ–ù–û –ü–û–î–ü–ò–°–ê–¢–¨–°–Ø:\n\n üëâ @freeimternet",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
                        web_app=WebAppInfo(url="https://telegra.ph/Instrukciya-po-ustanovke-VPN-na-vse-tipy-ustrojstv-08-28")
                    ),
                    InlineKeyboardButton(
                        text="üõ° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ",
                        callback_data="access"
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text="üÜòÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
                        callback_data="support"
                    ), 
                    InlineKeyboardButton(
                        text="üë•Ô∏è –û —Å–µ—Ä–≤–∏—Å–µ",
                        callback_data="about1"
                    ),
                ],
            ],
        )
    )


@dp.callback_query(F.data == "back1")
async def hello(callback_query: CallbackQuery):
    await callback_query.message.edit_text(
        text="üÜìFREE INTERNETüÜì\n\n–í—ã –ø–æ–ø–∞–ª–∏ –≤ VPN, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É—Å–ª—É–≥–∏ –ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –∑–∞ –ë–ï–°–ü–õ–ê–¢–ù–û.\n\n–ù–û –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ –ø—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ:\n\nüîµ–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª—ã. –ò —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\nüî• –ù–∞—à–∏ —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç—Ä–∞—Ñ–∏–∫—É, —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.\n\nüîê –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é –Ω–µ –¥–∞—Å—Ç –Ω–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –≤ –º–∏—Ä–µ.\n\nüöÄ –ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –≤ –æ—Ç–∫—Ä—ã—Ç—ã–π –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π!\n\nü§ó–ù–ò–ñ–ï, –¢–ï–õ–ï–ì–†–ê–ú–ú –ö–ê–ù–ê–õ–´ –ù–ê –ö–û–¢–û–†–´–ï –ù–£–ñ–ù–û –ü–û–î–ü–ò–°–ê–¢–¨–°–Ø:\n",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üë•Ô∏è –û —Å–µ—Ä–≤–∏—Å–µ",
                        callback_data="about"
                    ),
                    InlineKeyboardButton(
                        text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
                        callback_data="check"
                    ),
                ],
            ],
        )
    )


# @dp.message(F.text == "test")
# async def test(message):
#     await client.set_client(1)
#     pprint(await client.get_clients())
